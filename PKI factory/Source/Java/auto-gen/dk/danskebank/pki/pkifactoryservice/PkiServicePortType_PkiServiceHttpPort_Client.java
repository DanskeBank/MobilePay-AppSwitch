
package dk.danskebank.pki.pkifactoryservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2016-01-28T15:18:54.619+01:00
 * Generated source version: 3.1.4
 * 
 */
public final class PkiServicePortType_PkiServiceHttpPort_Client {

    private static final QName SERVICE_NAME = new QName("http://danskebank.dk/PKI/PKIFactoryService", "PkiService");

    private PkiServicePortType_PkiServiceHttpPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = PkiService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        PkiService ss = new PkiService(wsdlURL, SERVICE_NAME);
        PkiServicePortType port = ss.getPkiServiceHttpPort();  
        
        {
        System.out.println("Invoking renewCertificate...");
        dk.danskebank.pki.pkifactoryservice.RenewCertificateInType _renewCertificate_renewCertificateIn = new dk.danskebank.pki.pkifactoryservice.RenewCertificateInType();
        dk.danskebank.pki.pkifactoryservice.RequestHeaderType _renewCertificate_renewCertificateInRequestHeader = new dk.danskebank.pki.pkifactoryservice.RequestHeaderType();
        _renewCertificate_renewCertificateInRequestHeader.setSenderId("SenderId-2092368097");
        _renewCertificate_renewCertificateInRequestHeader.setCustomerId("CustomerId1407876612");
        _renewCertificate_renewCertificateInRequestHeader.setRequestId("RequestId-1725522518");
        _renewCertificate_renewCertificateInRequestHeader.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.702+01:00"));
        _renewCertificate_renewCertificateInRequestHeader.setInterfaceVersion("InterfaceVersion-879563508");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _renewCertificate_renewCertificateInRequestHeaderEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.CUSTOMERTEST;
        _renewCertificate_renewCertificateInRequestHeader.setEnvironment(_renewCertificate_renewCertificateInRequestHeaderEnvironment);
        _renewCertificate_renewCertificateIn.setRequestHeader(_renewCertificate_renewCertificateInRequestHeader);
        org.w3._2001._04.xmlenc_.EncryptedDataType _renewCertificate_renewCertificateInEncryptedData = new org.w3._2001._04.xmlenc_.EncryptedDataType();
        org.w3._2001._04.xmlenc_.EncryptionMethodType _renewCertificate_renewCertificateInEncryptedDataEncryptionMethod = new org.w3._2001._04.xmlenc_.EncryptionMethodType();
        java.util.List<java.lang.Object> _renewCertificate_renewCertificateInEncryptedDataEncryptionMethodContent = new java.util.ArrayList<java.lang.Object>();
        _renewCertificate_renewCertificateInEncryptedDataEncryptionMethod.getContent().addAll(_renewCertificate_renewCertificateInEncryptedDataEncryptionMethodContent);
        _renewCertificate_renewCertificateInEncryptedDataEncryptionMethod.setAlgorithm("Algorithm-1129925438");
        _renewCertificate_renewCertificateInEncryptedData.setEncryptionMethod(_renewCertificate_renewCertificateInEncryptedDataEncryptionMethod);
        org.w3._2000._09.xmldsig_.KeyInfoType _renewCertificate_renewCertificateInEncryptedDataKeyInfo = new org.w3._2000._09.xmldsig_.KeyInfoType();
        java.util.List<java.lang.Object> _renewCertificate_renewCertificateInEncryptedDataKeyInfoContent = new java.util.ArrayList<java.lang.Object>();
        _renewCertificate_renewCertificateInEncryptedDataKeyInfo.getContent().addAll(_renewCertificate_renewCertificateInEncryptedDataKeyInfoContent);
        _renewCertificate_renewCertificateInEncryptedDataKeyInfo.setId("Id1214955805");
        _renewCertificate_renewCertificateInEncryptedData.setKeyInfo(_renewCertificate_renewCertificateInEncryptedDataKeyInfo);
        org.w3._2001._04.xmlenc_.CipherDataType _renewCertificate_renewCertificateInEncryptedDataCipherData = new org.w3._2001._04.xmlenc_.CipherDataType();
        byte[] _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherValue = new byte[] {};
        _renewCertificate_renewCertificateInEncryptedDataCipherData.setCipherValue(_renewCertificate_renewCertificateInEncryptedDataCipherDataCipherValue);
        org.w3._2001._04.xmlenc_.CipherReferenceType _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReference = new org.w3._2001._04.xmlenc_.CipherReferenceType();
        org.w3._2001._04.xmlenc_.TransformsType _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReferenceTransforms = new org.w3._2001._04.xmlenc_.TransformsType();
        java.util.List<org.w3._2000._09.xmldsig_.TransformType> _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReferenceTransformsTransform = new java.util.ArrayList<org.w3._2000._09.xmldsig_.TransformType>();
        _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReferenceTransforms.getTransform().addAll(_renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReferenceTransformsTransform);
        _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReference.setTransforms(_renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReferenceTransforms);
        _renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReference.setURI("URI-1485027489");
        _renewCertificate_renewCertificateInEncryptedDataCipherData.setCipherReference(_renewCertificate_renewCertificateInEncryptedDataCipherDataCipherReference);
        _renewCertificate_renewCertificateInEncryptedData.setCipherData(_renewCertificate_renewCertificateInEncryptedDataCipherData);
        org.w3._2001._04.xmlenc_.EncryptionPropertiesType _renewCertificate_renewCertificateInEncryptedDataEncryptionProperties = new org.w3._2001._04.xmlenc_.EncryptionPropertiesType();
        java.util.List<org.w3._2001._04.xmlenc_.EncryptionPropertyType> _renewCertificate_renewCertificateInEncryptedDataEncryptionPropertiesEncryptionProperty = new java.util.ArrayList<org.w3._2001._04.xmlenc_.EncryptionPropertyType>();
        _renewCertificate_renewCertificateInEncryptedDataEncryptionProperties.getEncryptionProperty().addAll(_renewCertificate_renewCertificateInEncryptedDataEncryptionPropertiesEncryptionProperty);
        _renewCertificate_renewCertificateInEncryptedDataEncryptionProperties.setId("Id-1818308801");
        _renewCertificate_renewCertificateInEncryptedData.setEncryptionProperties(_renewCertificate_renewCertificateInEncryptedDataEncryptionProperties);
        _renewCertificate_renewCertificateInEncryptedData.setId("Id-2013908155");
        _renewCertificate_renewCertificateInEncryptedData.setType("Type471347214");
        _renewCertificate_renewCertificateInEncryptedData.setMimeType("MimeType-429025360");
        _renewCertificate_renewCertificateInEncryptedData.setEncoding("Encoding-1931886401");
        _renewCertificate_renewCertificateIn.setEncryptedData(_renewCertificate_renewCertificateInEncryptedData);
        try {
            dk.danskebank.pki.pkifactoryservice.RenewCertificateOutType _renewCertificate__return = port.renewCertificate(_renewCertificate_renewCertificateIn);
            System.out.println("renewCertificate.result=" + _renewCertificate__return);

        } catch (PKIFactoryServiceFault e) { 
            System.out.println("Expected exception: PKIFactoryServiceFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createCertificate...");
        dk.danskebank.pki.pkifactoryservice.CreateCertificateInType _createCertificate_createCertificateIn = new dk.danskebank.pki.pkifactoryservice.CreateCertificateInType();
        dk.danskebank.pki.pkifactoryservice.RequestHeaderType _createCertificate_createCertificateInRequestHeader = new dk.danskebank.pki.pkifactoryservice.RequestHeaderType();
        _createCertificate_createCertificateInRequestHeader.setSenderId("SenderId-1264119539");
        _createCertificate_createCertificateInRequestHeader.setCustomerId("CustomerId-1062599989");
        _createCertificate_createCertificateInRequestHeader.setRequestId("RequestId1411317850");
        _createCertificate_createCertificateInRequestHeader.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.722+01:00"));
        _createCertificate_createCertificateInRequestHeader.setInterfaceVersion("InterfaceVersion-223870214");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _createCertificate_createCertificateInRequestHeaderEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.CUSTOMERTEST;
        _createCertificate_createCertificateInRequestHeader.setEnvironment(_createCertificate_createCertificateInRequestHeaderEnvironment);
        _createCertificate_createCertificateIn.setRequestHeader(_createCertificate_createCertificateInRequestHeader);
        org.w3._2001._04.xmlenc_.EncryptedDataType _createCertificate_createCertificateInEncryptedData = new org.w3._2001._04.xmlenc_.EncryptedDataType();
        org.w3._2001._04.xmlenc_.EncryptionMethodType _createCertificate_createCertificateInEncryptedDataEncryptionMethod = new org.w3._2001._04.xmlenc_.EncryptionMethodType();
        java.util.List<java.lang.Object> _createCertificate_createCertificateInEncryptedDataEncryptionMethodContent = new java.util.ArrayList<java.lang.Object>();
        _createCertificate_createCertificateInEncryptedDataEncryptionMethod.getContent().addAll(_createCertificate_createCertificateInEncryptedDataEncryptionMethodContent);
        _createCertificate_createCertificateInEncryptedDataEncryptionMethod.setAlgorithm("Algorithm1051754955");
        _createCertificate_createCertificateInEncryptedData.setEncryptionMethod(_createCertificate_createCertificateInEncryptedDataEncryptionMethod);
        org.w3._2000._09.xmldsig_.KeyInfoType _createCertificate_createCertificateInEncryptedDataKeyInfo = new org.w3._2000._09.xmldsig_.KeyInfoType();
        java.util.List<java.lang.Object> _createCertificate_createCertificateInEncryptedDataKeyInfoContent = new java.util.ArrayList<java.lang.Object>();
        _createCertificate_createCertificateInEncryptedDataKeyInfo.getContent().addAll(_createCertificate_createCertificateInEncryptedDataKeyInfoContent);
        _createCertificate_createCertificateInEncryptedDataKeyInfo.setId("Id-506605954");
        _createCertificate_createCertificateInEncryptedData.setKeyInfo(_createCertificate_createCertificateInEncryptedDataKeyInfo);
        org.w3._2001._04.xmlenc_.CipherDataType _createCertificate_createCertificateInEncryptedDataCipherData = new org.w3._2001._04.xmlenc_.CipherDataType();
        byte[] _createCertificate_createCertificateInEncryptedDataCipherDataCipherValue = new byte[] {};
        _createCertificate_createCertificateInEncryptedDataCipherData.setCipherValue(_createCertificate_createCertificateInEncryptedDataCipherDataCipherValue);
        org.w3._2001._04.xmlenc_.CipherReferenceType _createCertificate_createCertificateInEncryptedDataCipherDataCipherReference = new org.w3._2001._04.xmlenc_.CipherReferenceType();
        org.w3._2001._04.xmlenc_.TransformsType _createCertificate_createCertificateInEncryptedDataCipherDataCipherReferenceTransforms = new org.w3._2001._04.xmlenc_.TransformsType();
        java.util.List<org.w3._2000._09.xmldsig_.TransformType> _createCertificate_createCertificateInEncryptedDataCipherDataCipherReferenceTransformsTransform = new java.util.ArrayList<org.w3._2000._09.xmldsig_.TransformType>();
        _createCertificate_createCertificateInEncryptedDataCipherDataCipherReferenceTransforms.getTransform().addAll(_createCertificate_createCertificateInEncryptedDataCipherDataCipherReferenceTransformsTransform);
        _createCertificate_createCertificateInEncryptedDataCipherDataCipherReference.setTransforms(_createCertificate_createCertificateInEncryptedDataCipherDataCipherReferenceTransforms);
        _createCertificate_createCertificateInEncryptedDataCipherDataCipherReference.setURI("URI-409236227");
        _createCertificate_createCertificateInEncryptedDataCipherData.setCipherReference(_createCertificate_createCertificateInEncryptedDataCipherDataCipherReference);
        _createCertificate_createCertificateInEncryptedData.setCipherData(_createCertificate_createCertificateInEncryptedDataCipherData);
        org.w3._2001._04.xmlenc_.EncryptionPropertiesType _createCertificate_createCertificateInEncryptedDataEncryptionProperties = new org.w3._2001._04.xmlenc_.EncryptionPropertiesType();
        java.util.List<org.w3._2001._04.xmlenc_.EncryptionPropertyType> _createCertificate_createCertificateInEncryptedDataEncryptionPropertiesEncryptionProperty = new java.util.ArrayList<org.w3._2001._04.xmlenc_.EncryptionPropertyType>();
        _createCertificate_createCertificateInEncryptedDataEncryptionProperties.getEncryptionProperty().addAll(_createCertificate_createCertificateInEncryptedDataEncryptionPropertiesEncryptionProperty);
        _createCertificate_createCertificateInEncryptedDataEncryptionProperties.setId("Id-1920207920");
        _createCertificate_createCertificateInEncryptedData.setEncryptionProperties(_createCertificate_createCertificateInEncryptedDataEncryptionProperties);
        _createCertificate_createCertificateInEncryptedData.setId("Id-1450446006");
        _createCertificate_createCertificateInEncryptedData.setType("Type-1125582331");
        _createCertificate_createCertificateInEncryptedData.setMimeType("MimeType653719190");
        _createCertificate_createCertificateInEncryptedData.setEncoding("Encoding1298508703");
        _createCertificate_createCertificateIn.setEncryptedData(_createCertificate_createCertificateInEncryptedData);
        try {
            dk.danskebank.pki.pkifactoryservice.CreateCertificateOutType _createCertificate__return = port.createCertificate(_createCertificate_createCertificateIn);
            System.out.println("createCertificate.result=" + _createCertificate__return);

        } catch (PKIFactoryServiceFault e) { 
            System.out.println("Expected exception: PKIFactoryServiceFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getOwnCertificateList...");
        dk.danskebank.pki.pkifactoryservice.GetOwnCertificateListInType _getOwnCertificateList_getOwnCertificateListIn = new dk.danskebank.pki.pkifactoryservice.GetOwnCertificateListInType();
        dk.danskebank.pki.pkifactoryservice.RequestHeaderType _getOwnCertificateList_getOwnCertificateListInRequestHeader = new dk.danskebank.pki.pkifactoryservice.RequestHeaderType();
        _getOwnCertificateList_getOwnCertificateListInRequestHeader.setSenderId("SenderId764292631");
        _getOwnCertificateList_getOwnCertificateListInRequestHeader.setCustomerId("CustomerId-1330175514");
        _getOwnCertificateList_getOwnCertificateListInRequestHeader.setRequestId("RequestId1068431690");
        _getOwnCertificateList_getOwnCertificateListInRequestHeader.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.732+01:00"));
        _getOwnCertificateList_getOwnCertificateListInRequestHeader.setInterfaceVersion("InterfaceVersion1671164385");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _getOwnCertificateList_getOwnCertificateListInRequestHeaderEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.PRODUCTION;
        _getOwnCertificateList_getOwnCertificateListInRequestHeader.setEnvironment(_getOwnCertificateList_getOwnCertificateListInRequestHeaderEnvironment);
        _getOwnCertificateList_getOwnCertificateListIn.setRequestHeader(_getOwnCertificateList_getOwnCertificateListInRequestHeader);
        dk.danskebank.pki.pkifactoryservice.elements.GetOwnCertificateListRequest _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest = new dk.danskebank.pki.pkifactoryservice.elements.GetOwnCertificateListRequest();
        dk.danskebank.pki.pkifactoryservice.elements.KeyGeneratorTypeType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestKeyGeneratorType = dk.danskebank.pki.pkifactoryservice.elements.KeyGeneratorTypeType.HSM;
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest.setKeyGeneratorType(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestKeyGeneratorType);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest.setCustomerId("CustomerId-1538356084");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.734+01:00"));
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest.setRequestId("RequestId-1155676544");
        org.w3._2000._09.xmldsig_.SignatureType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature = new org.w3._2000._09.xmldsig_.SignatureType();
        org.w3._2000._09.xmldsig_.SignedInfoType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfo = new org.w3._2000._09.xmldsig_.SignedInfoType();
        org.w3._2000._09.xmldsig_.CanonicalizationMethodType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoCanonicalizationMethod = new org.w3._2000._09.xmldsig_.CanonicalizationMethodType();
        java.util.List<java.lang.Object> _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoCanonicalizationMethodContent = new java.util.ArrayList<java.lang.Object>();
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoCanonicalizationMethod.getContent().addAll(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoCanonicalizationMethodContent);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoCanonicalizationMethod.setAlgorithm("Algorithm653583231");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfo.setCanonicalizationMethod(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoCanonicalizationMethod);
        org.w3._2000._09.xmldsig_.SignatureMethodType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoSignatureMethod = new org.w3._2000._09.xmldsig_.SignatureMethodType();
        java.util.List<java.lang.Object> _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoSignatureMethodContent = new java.util.ArrayList<java.lang.Object>();
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoSignatureMethod.getContent().addAll(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoSignatureMethodContent);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoSignatureMethod.setAlgorithm("Algorithm-1035741926");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfo.setSignatureMethod(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoSignatureMethod);
        java.util.List<org.w3._2000._09.xmldsig_.ReferenceType> _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoReference = new java.util.ArrayList<org.w3._2000._09.xmldsig_.ReferenceType>();
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfo.getReference().addAll(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfoReference);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfo.setId("Id1686376748");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature.setSignedInfo(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignedInfo);
        org.w3._2000._09.xmldsig_.SignatureValueType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignatureValue = new org.w3._2000._09.xmldsig_.SignatureValueType();
        byte[] _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignatureValueValue = new byte[] {};
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignatureValue.setValue(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignatureValueValue);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignatureValue.setId("Id-186082697");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature.setSignatureValue(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureSignatureValue);
        org.w3._2000._09.xmldsig_.KeyInfoType _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureKeyInfo = new org.w3._2000._09.xmldsig_.KeyInfoType();
        java.util.List<java.lang.Object> _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureKeyInfoContent = new java.util.ArrayList<java.lang.Object>();
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureKeyInfo.getContent().addAll(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureKeyInfoContent);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureKeyInfo.setId("Id-2045763177");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature.setKeyInfo(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureKeyInfo);
        java.util.List<org.w3._2000._09.xmldsig_.ObjectType> _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureObject = new java.util.ArrayList<org.w3._2000._09.xmldsig_.ObjectType>();
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature.getObject().addAll(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignatureObject);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature.setId("Id-2051499142");
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest.setSignature(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequestSignature);
        _getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest.setId("Id1183924237");
        _getOwnCertificateList_getOwnCertificateListIn.setGetOwnCertificateListRequest(_getOwnCertificateList_getOwnCertificateListInGetOwnCertificateListRequest);
        try {
            dk.danskebank.pki.pkifactoryservice.GetOwnCertificateListOutType _getOwnCertificateList__return = port.getOwnCertificateList(_getOwnCertificateList_getOwnCertificateListIn);
            System.out.println("getOwnCertificateList.result=" + _getOwnCertificateList__return);

        } catch (PKIFactoryServiceFault e) { 
            System.out.println("Expected exception: PKIFactoryServiceFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking revokeCertificate...");
        dk.danskebank.pki.pkifactoryservice.RevokeCertificateInType _revokeCertificate_revokeCertificateIn = new dk.danskebank.pki.pkifactoryservice.RevokeCertificateInType();
        dk.danskebank.pki.pkifactoryservice.RequestHeaderType _revokeCertificate_revokeCertificateInRequestHeader = new dk.danskebank.pki.pkifactoryservice.RequestHeaderType();
        _revokeCertificate_revokeCertificateInRequestHeader.setSenderId("SenderId-216618384");
        _revokeCertificate_revokeCertificateInRequestHeader.setCustomerId("CustomerId764738145");
        _revokeCertificate_revokeCertificateInRequestHeader.setRequestId("RequestId802615955");
        _revokeCertificate_revokeCertificateInRequestHeader.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.742+01:00"));
        _revokeCertificate_revokeCertificateInRequestHeader.setInterfaceVersion("InterfaceVersion-1270951909");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _revokeCertificate_revokeCertificateInRequestHeaderEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.PRODUCTION;
        _revokeCertificate_revokeCertificateInRequestHeader.setEnvironment(_revokeCertificate_revokeCertificateInRequestHeaderEnvironment);
        _revokeCertificate_revokeCertificateIn.setRequestHeader(_revokeCertificate_revokeCertificateInRequestHeader);
        dk.danskebank.pki.pkifactoryservice.elements.RevokeCertificateRequest _revokeCertificate_revokeCertificateInRevokeCertificateRequest = new dk.danskebank.pki.pkifactoryservice.elements.RevokeCertificateRequest();
        dk.danskebank.pki.pkifactoryservice.elements.KeyGeneratorTypeType _revokeCertificate_revokeCertificateInRevokeCertificateRequestKeyGeneratorType = dk.danskebank.pki.pkifactoryservice.elements.KeyGeneratorTypeType.SOFTWARE;
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setKeyGeneratorType(_revokeCertificate_revokeCertificateInRevokeCertificateRequestKeyGeneratorType);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setCustomerId("CustomerId-1293575855");
        dk.danskebank.pki.pkifactoryservice.elements.RevokeCertificateRequest.RevokeAll _revokeCertificate_revokeCertificateInRevokeCertificateRequestRevokeAll = new dk.danskebank.pki.pkifactoryservice.elements.RevokeCertificateRequest.RevokeAll();
        java.util.List<java.lang.Object> _revokeCertificate_revokeCertificateInRevokeCertificateRequestRevokeAllExceptCertificateSerialNo = new java.util.ArrayList<java.lang.Object>();
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestRevokeAll.getExceptCertificateSerialNo().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestRevokeAllExceptCertificateSerialNo);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setRevokeAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestRevokeAll);
        java.util.List<java.lang.String> _revokeCertificate_revokeCertificateInRevokeCertificateRequestCertificateSerialNo = new java.util.ArrayList<java.lang.String>();
        java.lang.String _revokeCertificate_revokeCertificateInRevokeCertificateRequestCertificateSerialNoVal1 = "_revokeCertificate_revokeCertificateInRevokeCertificateRequestCertificateSerialNoVal-745535621";
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestCertificateSerialNo.add(_revokeCertificate_revokeCertificateInRevokeCertificateRequestCertificateSerialNoVal1);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.getCertificateSerialNo().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestCertificateSerialNo);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setCRLReason(new java.math.BigInteger("-53093622355990048154813345839466523651"));
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.744+01:00"));
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setRequestId("RequestId-975827193");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _revokeCertificate_revokeCertificateInRevokeCertificateRequestEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.PRODUCTION;
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setEnvironment(_revokeCertificate_revokeCertificateInRevokeCertificateRequestEnvironment);
        org.w3._2000._09.xmldsig_.SignatureType _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature = new org.w3._2000._09.xmldsig_.SignatureType();
        org.w3._2000._09.xmldsig_.SignedInfoType _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfo = new org.w3._2000._09.xmldsig_.SignedInfoType();
        org.w3._2000._09.xmldsig_.CanonicalizationMethodType _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoCanonicalizationMethod = new org.w3._2000._09.xmldsig_.CanonicalizationMethodType();
        java.util.List<java.lang.Object> _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoCanonicalizationMethodContent = new java.util.ArrayList<java.lang.Object>();
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoCanonicalizationMethod.getContent().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoCanonicalizationMethodContent);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoCanonicalizationMethod.setAlgorithm("Algorithm-407548681");
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfo.setCanonicalizationMethod(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoCanonicalizationMethod);
        org.w3._2000._09.xmldsig_.SignatureMethodType _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoSignatureMethod = new org.w3._2000._09.xmldsig_.SignatureMethodType();
        java.util.List<java.lang.Object> _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoSignatureMethodContent = new java.util.ArrayList<java.lang.Object>();
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoSignatureMethod.getContent().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoSignatureMethodContent);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoSignatureMethod.setAlgorithm("Algorithm1910703851");
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfo.setSignatureMethod(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoSignatureMethod);
        java.util.List<org.w3._2000._09.xmldsig_.ReferenceType> _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoReference = new java.util.ArrayList<org.w3._2000._09.xmldsig_.ReferenceType>();
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfo.getReference().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfoReference);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfo.setId("Id664603160");
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature.setSignedInfo(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignedInfo);
        org.w3._2000._09.xmldsig_.SignatureValueType _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignatureValue = new org.w3._2000._09.xmldsig_.SignatureValueType();
        byte[] _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignatureValueValue = new byte[] {};
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignatureValue.setValue(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignatureValueValue);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignatureValue.setId("Id-1228949960");
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature.setSignatureValue(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureSignatureValue);
        org.w3._2000._09.xmldsig_.KeyInfoType _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureKeyInfo = new org.w3._2000._09.xmldsig_.KeyInfoType();
        java.util.List<java.lang.Object> _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureKeyInfoContent = new java.util.ArrayList<java.lang.Object>();
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureKeyInfo.getContent().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureKeyInfoContent);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureKeyInfo.setId("Id-581343873");
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature.setKeyInfo(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureKeyInfo);
        java.util.List<org.w3._2000._09.xmldsig_.ObjectType> _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureObject = new java.util.ArrayList<org.w3._2000._09.xmldsig_.ObjectType>();
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature.getObject().addAll(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignatureObject);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature.setId("Id-1324421179");
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setSignature(_revokeCertificate_revokeCertificateInRevokeCertificateRequestSignature);
        _revokeCertificate_revokeCertificateInRevokeCertificateRequest.setId("Id1229740517");
        _revokeCertificate_revokeCertificateIn.setRevokeCertificateRequest(_revokeCertificate_revokeCertificateInRevokeCertificateRequest);
        try {
            dk.danskebank.pki.pkifactoryservice.RevokeCertificateOutType _revokeCertificate__return = port.revokeCertificate(_revokeCertificate_revokeCertificateIn);
            System.out.println("revokeCertificate.result=" + _revokeCertificate__return);

        } catch (PKIFactoryServiceFault e) { 
            System.out.println("Expected exception: PKIFactoryServiceFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getBankCertificate...");
        dk.danskebank.pki.pkifactoryservice.GetBankCertificateInType _getBankCertificate_getBankCertificateIn = new dk.danskebank.pki.pkifactoryservice.GetBankCertificateInType();
        dk.danskebank.pki.pkifactoryservice.RequestHeaderType _getBankCertificate_getBankCertificateInRequestHeader = new dk.danskebank.pki.pkifactoryservice.RequestHeaderType();
        _getBankCertificate_getBankCertificateInRequestHeader.setSenderId("SenderId1385570349");
        _getBankCertificate_getBankCertificateInRequestHeader.setCustomerId("CustomerId851501499");
        _getBankCertificate_getBankCertificateInRequestHeader.setRequestId("RequestId-566881622");
        _getBankCertificate_getBankCertificateInRequestHeader.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.749+01:00"));
        _getBankCertificate_getBankCertificateInRequestHeader.setInterfaceVersion("InterfaceVersion-2006341959");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _getBankCertificate_getBankCertificateInRequestHeaderEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.SYSTEMTEST;
        _getBankCertificate_getBankCertificateInRequestHeader.setEnvironment(_getBankCertificate_getBankCertificateInRequestHeaderEnvironment);
        _getBankCertificate_getBankCertificateIn.setRequestHeader(_getBankCertificate_getBankCertificateInRequestHeader);
        dk.danskebank.pki.pkifactoryservice.elements.GetBankCertificateRequest _getBankCertificate_getBankCertificateInGetBankCertificateRequest = new dk.danskebank.pki.pkifactoryservice.elements.GetBankCertificateRequest();
        _getBankCertificate_getBankCertificateInGetBankCertificateRequest.setBankRootCertificateSerialNo("BankRootCertificateSerialNo1452166326");
        _getBankCertificate_getBankCertificateInGetBankCertificateRequest.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.750+01:00"));
        _getBankCertificate_getBankCertificateInGetBankCertificateRequest.setRequestId("RequestId1414194613");
        _getBankCertificate_getBankCertificateInGetBankCertificateRequest.setId("Id-1991774704");
        _getBankCertificate_getBankCertificateIn.setGetBankCertificateRequest(_getBankCertificate_getBankCertificateInGetBankCertificateRequest);
        try {
            dk.danskebank.pki.pkifactoryservice.GetBankCertificateOutType _getBankCertificate__return = port.getBankCertificate(_getBankCertificate_getBankCertificateIn);
            System.out.println("getBankCertificate.result=" + _getBankCertificate__return);

        } catch (PKIFactoryServiceFault e) { 
            System.out.println("Expected exception: PKIFactoryServiceFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking certificateStatus...");
        dk.danskebank.pki.pkifactoryservice.CertificateStatusInType _certificateStatus_certificateStatusIn = new dk.danskebank.pki.pkifactoryservice.CertificateStatusInType();
        dk.danskebank.pki.pkifactoryservice.RequestHeaderType _certificateStatus_certificateStatusInRequestHeader = new dk.danskebank.pki.pkifactoryservice.RequestHeaderType();
        _certificateStatus_certificateStatusInRequestHeader.setSenderId("SenderId-1064475198");
        _certificateStatus_certificateStatusInRequestHeader.setCustomerId("CustomerId1028124660");
        _certificateStatus_certificateStatusInRequestHeader.setRequestId("RequestId733151669");
        _certificateStatus_certificateStatusInRequestHeader.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.752+01:00"));
        _certificateStatus_certificateStatusInRequestHeader.setInterfaceVersion("InterfaceVersion-1171521735");
        dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType _certificateStatus_certificateStatusInRequestHeaderEnvironment = dk.danskebank.pki.pkifactoryservice.elements.EnvironmentType.PRODUCTION;
        _certificateStatus_certificateStatusInRequestHeader.setEnvironment(_certificateStatus_certificateStatusInRequestHeaderEnvironment);
        _certificateStatus_certificateStatusIn.setRequestHeader(_certificateStatus_certificateStatusInRequestHeader);
        dk.danskebank.pki.pkifactoryservice.elements.CertificateStatusRequest _certificateStatus_certificateStatusInCertificateStatusRequest = new dk.danskebank.pki.pkifactoryservice.elements.CertificateStatusRequest();
        dk.danskebank.pki.pkifactoryservice.elements.KeyGeneratorTypeType _certificateStatus_certificateStatusInCertificateStatusRequestKeyGeneratorType = dk.danskebank.pki.pkifactoryservice.elements.KeyGeneratorTypeType.SOFTWARE;
        _certificateStatus_certificateStatusInCertificateStatusRequest.setKeyGeneratorType(_certificateStatus_certificateStatusInCertificateStatusRequestKeyGeneratorType);
        java.util.List<java.lang.String> _certificateStatus_certificateStatusInCertificateStatusRequestCertificateSerialNo = new java.util.ArrayList<java.lang.String>();
        java.lang.String _certificateStatus_certificateStatusInCertificateStatusRequestCertificateSerialNoVal1 = "_certificateStatus_certificateStatusInCertificateStatusRequestCertificateSerialNoVal-722939363";
        _certificateStatus_certificateStatusInCertificateStatusRequestCertificateSerialNo.add(_certificateStatus_certificateStatusInCertificateStatusRequestCertificateSerialNoVal1);
        _certificateStatus_certificateStatusInCertificateStatusRequest.getCertificateSerialNo().addAll(_certificateStatus_certificateStatusInCertificateStatusRequestCertificateSerialNo);
        _certificateStatus_certificateStatusInCertificateStatusRequest.setCustomerId("CustomerId992583222");
        _certificateStatus_certificateStatusInCertificateStatusRequest.setTimestamp(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-01-28T15:18:54.753+01:00"));
        _certificateStatus_certificateStatusInCertificateStatusRequest.setRequestId("RequestId-1103869113");
        org.w3._2000._09.xmldsig_.SignatureType _certificateStatus_certificateStatusInCertificateStatusRequestSignature = new org.w3._2000._09.xmldsig_.SignatureType();
        org.w3._2000._09.xmldsig_.SignedInfoType _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfo = new org.w3._2000._09.xmldsig_.SignedInfoType();
        org.w3._2000._09.xmldsig_.CanonicalizationMethodType _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoCanonicalizationMethod = new org.w3._2000._09.xmldsig_.CanonicalizationMethodType();
        java.util.List<java.lang.Object> _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoCanonicalizationMethodContent = new java.util.ArrayList<java.lang.Object>();
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoCanonicalizationMethod.getContent().addAll(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoCanonicalizationMethodContent);
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoCanonicalizationMethod.setAlgorithm("Algorithm994548090");
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfo.setCanonicalizationMethod(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoCanonicalizationMethod);
        org.w3._2000._09.xmldsig_.SignatureMethodType _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoSignatureMethod = new org.w3._2000._09.xmldsig_.SignatureMethodType();
        java.util.List<java.lang.Object> _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoSignatureMethodContent = new java.util.ArrayList<java.lang.Object>();
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoSignatureMethod.getContent().addAll(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoSignatureMethodContent);
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoSignatureMethod.setAlgorithm("Algorithm125030463");
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfo.setSignatureMethod(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoSignatureMethod);
        java.util.List<org.w3._2000._09.xmldsig_.ReferenceType> _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoReference = new java.util.ArrayList<org.w3._2000._09.xmldsig_.ReferenceType>();
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfo.getReference().addAll(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfoReference);
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfo.setId("Id1324708070");
        _certificateStatus_certificateStatusInCertificateStatusRequestSignature.setSignedInfo(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignedInfo);
        org.w3._2000._09.xmldsig_.SignatureValueType _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignatureValue = new org.w3._2000._09.xmldsig_.SignatureValueType();
        byte[] _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignatureValueValue = new byte[] {};
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignatureValue.setValue(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignatureValueValue);
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignatureValue.setId("Id2120899336");
        _certificateStatus_certificateStatusInCertificateStatusRequestSignature.setSignatureValue(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureSignatureValue);
        org.w3._2000._09.xmldsig_.KeyInfoType _certificateStatus_certificateStatusInCertificateStatusRequestSignatureKeyInfo = new org.w3._2000._09.xmldsig_.KeyInfoType();
        java.util.List<java.lang.Object> _certificateStatus_certificateStatusInCertificateStatusRequestSignatureKeyInfoContent = new java.util.ArrayList<java.lang.Object>();
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureKeyInfo.getContent().addAll(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureKeyInfoContent);
        _certificateStatus_certificateStatusInCertificateStatusRequestSignatureKeyInfo.setId("Id1296490952");
        _certificateStatus_certificateStatusInCertificateStatusRequestSignature.setKeyInfo(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureKeyInfo);
        java.util.List<org.w3._2000._09.xmldsig_.ObjectType> _certificateStatus_certificateStatusInCertificateStatusRequestSignatureObject = new java.util.ArrayList<org.w3._2000._09.xmldsig_.ObjectType>();
        _certificateStatus_certificateStatusInCertificateStatusRequestSignature.getObject().addAll(_certificateStatus_certificateStatusInCertificateStatusRequestSignatureObject);
        _certificateStatus_certificateStatusInCertificateStatusRequestSignature.setId("Id390905273");
        _certificateStatus_certificateStatusInCertificateStatusRequest.setSignature(_certificateStatus_certificateStatusInCertificateStatusRequestSignature);
        _certificateStatus_certificateStatusInCertificateStatusRequest.setId("Id1040587365");
        _certificateStatus_certificateStatusIn.setCertificateStatusRequest(_certificateStatus_certificateStatusInCertificateStatusRequest);
        try {
            dk.danskebank.pki.pkifactoryservice.CertificateStatusOutType _certificateStatus__return = port.certificateStatus(_certificateStatus_certificateStatusIn);
            System.out.println("certificateStatus.result=" + _certificateStatus__return);

        } catch (PKIFactoryServiceFault e) { 
            System.out.println("Expected exception: PKIFactoryServiceFault has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
